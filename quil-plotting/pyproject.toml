[project]
name = "quil-plotting"
version = "0.1.0"
requires-python = ">=3.8"
description = "A Python package for visualizing Quil programs."
documentation = "https://rigetti.github.io/quil-rs/quil.html"
readme = "README.md"
license = { text = "Apache-2.0" }
authors = [{ name = "Rigetti Computing", email = "softapps@rigetti.com" }]
classifiers = [
  "Development Status :: 3 - Alpha",
  "License :: OSI Approved :: Apache Software License",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Operating System :: OS Independent",
]
dependencies = [
    "numpy>=1.2.1",
    "plotly>=5.11",
    "kaleido==0.2.1",
    "pandas>=2.0"
]

[project.optional-dependencies]
dev = [
    "ruff>=0.3.7",
    "maturin>=1.2.3",
    "mypy>=1.1.1",
    "pytest>=7.2.2",
    "pdoc>=14.1.0",
    "syrupy>=3.0.6"
]

# [build-system]
# requires = ["setuptools>=61.0"]
# build-backend = "setuptools.build_meta"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]
line-length = 120
indent-width = 4
target-version = "py38"

[tool.ruff.lint]
select = ["D", "E4", "E7", "E9", "F", "I", "B", "S", "W"]
ignore = [
    "E741" # "Ambiguous" variable names like "I" aren't ambiguous in this contex.
]
fixable = ["ALL"]
unfixable = []
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.per-file-ignores]
"quil/**/*.py" = [
    "F403", # * imports allowed in extension module glue.
    "D100", # docstrings belong in type stubs
    "D104",
]
"test/**/*.py" = [
    "D",    # docstrings are not enforced in tests
    "S101", # asserts are allowed in tests
    "S301", # we need to test pickling
]
"make_docs.py" = [ "D" ]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.pyright]
# This diagnostic is raised when a type stub is found without a corresponding source file. This is
# necessarily the case for a pure Rust pyo3 module, so disabling it.
reportMissingModuleSource = false

[tool.mypy]
plugins = "numpy.typing.mypy_plugin"

[[tool.mypy.overrides]]
module = [
    "quil.quil",
]
ignore_missing_imports = true
