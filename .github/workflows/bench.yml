on: 
  push:
    branches: [main]
  pull_request:

name: Benchmark

jobs:
  benchmark:
    name: Run benchmarks
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        platform:
          [
            {
              os: "macos-latest",
              python-architecture: "arm64",
              rust-target: "aarch64-apple-darwin",
            },
            {
              os: "ubuntu-latest",
              python-architecture: "x64",
              rust-target: "x86_64-unknown-linux-gnu",
            },
            {
              os: "windows-latest",
              python-architecture: "x64",
              rust-target: "x86_64-pc-windows-msvc",
            },
          ]

    steps:
      - name: Allow Long File Paths
        if: startsWith(runner.os, 'Windows')
        run: git config --system core.longpaths true

      - name: Checkout sources
        uses: actions/checkout@v5
      - uses: Swatinem/rust-cache@v2
    
      - name: Download benchmark artifacts
        uses: dawidd6/action-download-artifact@v11
        with:
          workflow: bench.yml
          name: benchmarks-${{ matrix.os }}
          path: target/criterion
        continue-on-error: true
      
      - name: Run cargo benchmark
        run: >
          cargo bench
          --bench parser
          --bench simplification
          --
          --warm-up-time=2
          --measurement-time=3
          --sample-size=500
          --color=always

      - name: Archive benchmark results
        if: ${{ github.ref == 'refs/heads/main'}}
        uses: actions/upload-artifact@v4
        with:
          name: benchmarks-${{ matrix.os }}
          path: target/criterion
    
