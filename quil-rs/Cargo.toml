[package]
name = "quil-rs"
description = "Rust tooling for Quil (Quantum Instruction Language)"
version = "0.33.0-rc.2"
edition = "2021"
rust-version = "1.80"
license = "Apache-2.0"
repository = "https://github.com/rigetti/quil-rs"
keywords = ["Quil", "Quantum", "Rigetti"]
categories = ["parser-implementations", "science", "compilers", "emulators"]

[lib]
name = "quil_rs"
crate-type = ["cdylib", "rlib"]

[dependencies]
approx = { version = "0.5.1", features = ["num-complex"] }
dot-writer = { version = "0.1.2", optional = true }
internment = { version = "0.8.6", features = ["arc"] }
itertools = "0.12.1"
lexical = "7.0.1"
ndarray.workspace = true
nom = "7.1.1"
nom_locate = "4.0.0"
num-complex = "0.4.6"
once_cell = "1.17.1"
petgraph = "0.6.4"
regex = "1.7.1"
serde = { version = "1.0.125", features = ["derive"] }
strum.workspace = true
thiserror = "1.0.56"
indexmap.workspace = true
statrs = "0.16.0"
paste = "1.0.15"
optipy = "0.1.0"

# Enabled with the "python" feature.
numpy = { version = "0.25.0", optional = true }
pyo3 = { version = "0.25.1", features = ["indexmap", "num-complex", "multiple-pymethods"], optional = true }
pyo3-stub-gen = { version = "0.13.1", features = ["numpy"], optional = true }

[dev-dependencies]
clap = { version = "4.3.19", features = ["derive", "string"] }
criterion = { version = "0.5.1", features = ["html_reports"] }
insta = "1.37.0"
petgraph = "0.6.2"
pretty_assertions = "1.4.0"
proptest = "1.0.0"
proptest-derive = "0.5.1"
rand = "0.8.5"
rasciigraph = "0.2.0"
rstest = "0.18.2"

[build-dependencies]
pyo3-build-config = { version = "0.25.1", optional = true }

# These are described in the crate README.md
[features]
graphviz-dot = ["dot-writer"]
wasm-bindgen = []
python = [ "numpy", "pyo3", "pyo3-build-config" ]
stubs = [ "python", "pyo3-stub-gen" ]
extension-module = [ "python", "pyo3/extension-module" ]

[[bench]]
name = "parser"
harness = false

[[bench]]
name = "get_frames_for_instruction"
harness = false

[[bench]]
name = "scheduled_program_from_program"
harness = false

[[bench]]
name = "simplification"
harness = false

[[example]]
name = "generate_test_expressions"

